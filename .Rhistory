install.packages(xaringanthemer)
install.packages('xaringanthemer')
xaringan:::inf_mr()
devtools::install_github("gadenbuie/xaringanthemer")
devtools::install_github("gadenbuie/xaringanthemer")
devtools::install_github("gadenbuie/xaringanthemer")
devtools::install_github("gadenbuie/xaringanthemer")
devtools::install_github("gadenbuie/xaringanthemer")
devtools::install_github("gadenbuie/xaringanthemer")
install_github("gadenbuie/xaringanthemer")
devtools::install_github("gadenbuie/xaringanthemer")
devtools::install_github("gadenbuie/xaringanthemer")
devtools::install_github("gadenbuie/xaringanthemer")
xaringan:::inf_mr()
devtools::install_github("gadenbuie/xaringanthemer")
devtools::install_github("gadenbuie/xaringanthemer")
devtools::install_github("gadenbuie/xaringanthemer")
devtools::install_github("gadenbuie/xaringanthemer")
devtools::install_github("gadenbuie/xaringanthemer")
devtools::install_github("gadenbuie/xaringanthemer")
update.packages(devtools)
update.packages("devtools")
update.packages("devtools")
devtools::install_github("gadenbuie/xaringanthemer")
devtools::install_github("gadenbuie/xaringanthemer")
devtools::install_github("gadenbuie/xaringanthemer")
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
setwd("~/Documents/tesis/R_scripts/intermediate_scripts")
# COUNT_D_TOKENS
# The idea is for this script to read in the initial data set, apply as much information automatically
# Export target times for hand correction, and pipe this information through to be as acurate as possilbe
library(tidyverse)
# Set working directory to source file location
setwd("~/Documents/tesis/R_scripts/intermediate_scripts")
source("../functions/api.R")
source("../functions/checkAccuracey.R")
source("../functions/adjustIndex.R")
source("../functions/getWordPosition.R")
source("../functions/tagPOS.R")
source("../functions/posConvert.R")
source("../functions/tagDipHia.R")
# Set the working directory into the counter folder
setwd("/Users/maxcarey/Documents/tesis/corpus/finalD/")
# Read all the text files into a single dataframe
data <-
list.files(pattern = "*.txt") %>%
map_df(~read_csv(., col_names=FALSE))
colnames(data) <- c("hablante",
"sonidoMeta",
"sonidoPrePre",
"sonidoPre",
"palabra",
"index",
"sonidoSig",
"sonidoSigSig",
"palabraPrev10",
"palabraPrev9",
"palabraPrev8",
"palabraPrev7",
"palabraPrev6",
"palabraPrev5",
"palabraPrev4",
"palabraPrev3",
"palabraPrev2",
"palabraPrev",
"palabraSig",
"palabraSig2",
"palabraSig3",
"palabraSig4",
"palabraSig5",
"palabraSig6",
"palabraSig7",
"palabraSig8",
"palabraSig9",
"palabraSig10",
"startTime",
"midPoint",
"endTime")
# Add wordPosition column to the data frame
data$wordPosition <- mapply(getWordPosition, data$palabra, data$index)
# Adjust the indexes from PRAAT
data$index <- mapply(adjustIndex, data$palabra, data$index)
# Check for accuracey
data$indexMatchesD <- mapply(checkAccuracy, data$palabra, data$index)
# Add stress status column to data frame
data$stressStatus <- mapply(stress_statusD, data$palabra, data$index)
# Prepare data to tag for POS
data <- data %>%
mutate(contextoIzq = paste(palabraPrev10,
palabraPrev9,
palabraPrev8,
palabraPrev7,
palabraPrev6,
palabraPrev5,
palabraPrev4,
palabraPrev3,
palabraPrev2,
palabraPrev)) %>%
mutate(contextoDer = paste(palabraSig,
palabraSig2,
palabraSig3,
palabraSig4,
palabraSig5,
palabraSig6,
palabraSig7,
palabraSig8,
palabraSig9,
palabraSig10))
# Run the function to tag the data according to eagles
data$posEagles <- mapply(tagPOS, data$contextoIzq, data$palabra, data$contextoDer)
# Transorm the EAGLES pos function into a legible output
data$pos <- mapply(posConvert, data$posEagles)
# Add uniqueID field
data <- data %>%
mutate(uniqueID = uniqueID = paste(hablante, midPoint, sep = '-'))
# Transorm the EAGLES pos function into a legible output
data$dipOHiat <- mapply(tagDipHia, data$sonidoPrePre, data$sonidoPre, data$sonidoSigSig, data$sonidoSig)
# Save CSV file
readr::write_csv(data, "~/Documents/tesis/data.csv")
library(tidyverse)
library(googlesheets)
library(kableExtra)
data <- readr::read_csv("~/Documents/tesis/data.csv")
google_sheet <- gs_title("participantes")
participantes <- as.data.frame(gs_read(ss=google_sheet, ws="Form Responses 1"))
participantes %>%
filter(valid=="yes") %>%
select(grupo, sexo, edad, timeRes, trabajoActual) %>%
kable() %>%
kable_styling()
library(tidyverse)
library(googlesheets)
library(kableExtra)
data <- readr::read_csv("~/Documents/tesis/data.csv")
google_sheet <- gs_title("participantes")
participantes <- as.data.frame(gs_read(ss=google_sheet, ws="Form Responses 1"))
xaringan:::inf_mr()
xaringan:::inf_mr()
